version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    ports: 
      - 5432:5432
    networks:
      - sos_network
    environment:
      - POSTGRES_DB=sos
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=galih123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  sos-be:
    container_name: sos-be
    image: sos-be:1.0
    build: 
      context: sos-be
      dockerfile: Dockerfile
    ports:
      - 6100:6100
    networks:
      - sos_network
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:galih123@postgres:5432/sos?schema=public
      - APP_NAME=SOS_BACKEND
      - APP_PORT=6100
    volumes:
      - sos_be_storage:/app/assets
  sos-fe:
    container_name: sos-fe
    image: sos-fe:1.0
    build:
      context: sos-fe
      dockerfile: Dockerfile
    networks:
      - sos_network
    depends_on: 
      - postgres
      - sos-be
    environment:
      - NODE_ENV=production
    volumes:
      - sos_fe_storage:/usr/share/nginx/html
  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - 80:80
    networks:
      - sos_network
    volumes:
      - sos_fe_storage:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - sos-fe

volumes:
  postgres_data:
    driver: local
  sos_be_storage:
    driver: local
  sos_fe_storage:
    driver: local

networks:
  sos_network:
    name: sos_network
